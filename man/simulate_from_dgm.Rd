% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_aft_dgm_flexible.R
\name{simulate_from_dgm}
\alias{simulate_from_dgm}
\title{Simulate Survival Data from AFT Data Generating Mechanism}
\usage{
simulate_from_dgm(
  dgm,
  n = NULL,
  rand_ratio = 1,
  max_follow = Inf,
  cens_adjust = 0,
  draw_treatment = TRUE,
  seed = NULL
)
}
\arguments{
\item{dgm}{An object of class "aft_dgm_flex" created by
\code{\link{generate_aft_dgm_flex}}}

\item{n}{Integer specifying the sample size. If NULL (default), uses the
entire super population}

\item{rand_ratio}{Numeric specifying the randomization ratio (treatment:control).
Default is 1 (1:1 allocation)}

\item{max_follow}{Numeric specifying maximum follow-up time for administrative
censoring. Default is Inf (no administrative censoring)}

\item{cens_adjust}{Numeric adjustment to censoring distribution on log scale.
Positive values increase censoring, negative values decrease it. Default is 0}

\item{draw_treatment}{Logical indicating whether to redraw treatment assignment.
If TRUE (default), reassigns treatment according to rand_ratio. If FALSE,
keeps original treatment assignments from super population}

\item{seed}{Integer random seed for reproducibility. Default is NULL (no seed set)}
}
\value{
A data.frame containing simulated survival data with columns:
\describe{
\item{id}{Subject identifier}
\item{treat}{Treatment assignment (0 or 1)}
\item{treat_sim}{Simulated treatment assignment (may differ from treat if
draw_treatment = TRUE)}
\item{flag_harm}{Subgroup indicator (1 if all subgroup conditions met, 0 otherwise)}
\item{z_*}{Standardized covariate values}
\item{y_sim}{Observed survival time (minimum of true time and censoring time)}
\item{event_sim}{Event indicator (1 = event observed, 0 = censored)}
\item{t_true}{True underlying survival time (before censoring)}
\item{c_time}{Censoring time}
}
}
\description{
Generates simulated survival data from a previously created AFT data generating
mechanism (DGM). Samples from the super population and generates survival times
with specified censoring.
}
\details{
\subsection{Simulation Process}{
\enumerate{
\item \strong{Sampling}: Draws n observations with replacement from the super population
\item \strong{Treatment Assignment}:
\itemize{
\item If \code{draw_treatment = TRUE}: Reassigns treatment based on \code{rand_ratio}
\item If \code{draw_treatment = FALSE}: Keeps original treatment assignments
}
\item \strong{Survival Times}: Generates from Weibull AFT model:
\deqn{\log(T) = \mu + \sigma \epsilon + X'\gamma}
where Îµ ~ extreme value distribution
\item \strong{Censoring}: Applies specified censoring distribution (Weibull or uniform)
\item \strong{Administrative Censoring}: Applies max_follow cutoff if specified
}
}

\subsection{Censoring Adjustment}{

The \code{cens_adjust} parameter modifies the censoring distribution:
\itemize{
\item \code{cens_adjust = log(2)} doubles expected censoring times
\item \code{cens_adjust = log(0.5)} halves expected censoring times
}
}
}
\examples{
\dontrun{
# Create DGM first
dgm <- generate_aft_dgm_flex(
  data = gbsg,
  continuous_vars = c("age", "size", "nodes", "pgr", "er"),
  factor_vars = c("meno", "grade"),
  outcome_var = "rfstime",
  event_var = "status",
  treatment_var = "hormon",
  subgroup_vars = c("er", "meno"),
  subgroup_cuts = list(er = 20, meno = 0),
  model = "alt"
)

# Simulate data with 1:1 randomization
sim_data <- simulate_from_dgm(
  dgm = dgm,
  n = 1000,
  rand_ratio = 1,
  max_follow = 84,
  cens_adjust = log(1.5),
  seed = 123
)

# Check results
table(sim_data$treat_sim)
mean(sim_data$event_sim)

# Simulate with 2:1 randomization
sim_data_2to1 <- simulate_from_dgm(
  dgm = dgm,
  n = 900,
  rand_ratio = 2,  # 2:1 treatment:control
  seed = 456
)
}

}
\seealso{
\code{\link{generate_aft_dgm_flex}} for creating the DGM
}
